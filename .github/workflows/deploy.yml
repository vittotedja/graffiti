# This workflow will build the server image, push to ecr, deploy to ecs
name: Deploy to production

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  id-token: write
  contents: read

jobs:

  build:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    
    - name: Change directory to graffiti-backend
      run: cd graffiti-backend
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.ROLE_TO_ASSUME_ARN }}
        aws-region: ap-southeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Load secrets and save to app.env
      run: |
        cd graffiti-backend
        aws secretsmanager get-secret-value --secret-id graffiti_secrets --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

    - name: Build, tag, and push docker image to Amazon ECR
      id: build-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: graffiti
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd graffiti-backend
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        echo "image=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Render Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: graffiti-backend/ecs-task-definition.json
        execution-role-arn: ${{ secrets.EXECUTION_ROLE_ARN }}
        container-name: graffiti-container
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy to Amazon ECS service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v2
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: graffiti-ecs-service
        cluster: graffiti-ecs-cluster
        wait-for-service-stability: true
