// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	AcceptFriendship(ctx context.Context, id pgtype.UUID) (Friendship, error)
	AddLikesCount(ctx context.Context, id pgtype.UUID) (Post, error)
	ArchiveWall(ctx context.Context, id pgtype.UUID) error
	BlockFriendship(ctx context.Context, id pgtype.UUID) (Friendship, error)
	CreateFriendship(ctx context.Context, arg CreateFriendshipParams) (Friendship, error)
	CreateLike(ctx context.Context, arg CreateLikeParams) (Like, error)
	CreatePost(ctx context.Context, arg CreatePostParams) (Post, error)
	CreateTestWall(ctx context.Context, arg CreateTestWallParams) (Wall, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateWall(ctx context.Context, arg CreateWallParams) (Wall, error)
	DeleteFriendship(ctx context.Context, id pgtype.UUID) error
	DeleteLike(ctx context.Context, arg DeleteLikeParams) error
	DeletePost(ctx context.Context, id pgtype.UUID) error
	DeleteUser(ctx context.Context, id pgtype.UUID) error
	DeleteWall(ctx context.Context, id pgtype.UUID) error
	FinishOnboarding(ctx context.Context, id pgtype.UUID) error
	GetFriendship(ctx context.Context, id pgtype.UUID) (Friendship, error)
	GetHighlightedPosts(ctx context.Context) ([]Post, error)
	GetHighlightedPostsByWall(ctx context.Context, wallID pgtype.UUID) ([]Post, error)
	GetLike(ctx context.Context, arg GetLikeParams) (Like, error)
	GetNumberOfFriends(ctx context.Context, fromUser pgtype.UUID) (int64, error)
	GetNumberOfLikesByPost(ctx context.Context, postID pgtype.UUID) (int64, error)
	GetNumberOfPendingFriendRequests(ctx context.Context, toUser pgtype.UUID) (int64, error)
	GetPost(ctx context.Context, id pgtype.UUID) (Post, error)
	GetUser(ctx context.Context, id pgtype.UUID) (User, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByUsername(ctx context.Context, username string) (User, error)
	GetWall(ctx context.Context, id pgtype.UUID) (Wall, error)
	HighlightPost(ctx context.Context, id pgtype.UUID) (Post, error)
	ListFriendsDetailsByStatus(ctx context.Context, arg ListFriendsDetailsByStatusParams) ([]ListFriendsDetailsByStatusRow, error)
	ListFriendshipByUserPairs(ctx context.Context, arg ListFriendshipByUserPairsParams) (Friendship, error)
	ListFriendships(ctx context.Context) ([]Friendship, error)
	ListFriendshipsByUserId(ctx context.Context, fromUser pgtype.UUID) ([]Friendship, error)
	ListFriendshipsByUserIdAndStatus(ctx context.Context, arg ListFriendshipsByUserIdAndStatusParams) ([]Friendship, error)
	ListLikes(ctx context.Context) ([]Like, error)
	ListLikesByPost(ctx context.Context, postID pgtype.UUID) ([]Like, error)
	ListLikesByUser(ctx context.Context, userID pgtype.UUID) ([]Like, error)
	ListPosts(ctx context.Context) ([]Post, error)
	ListPostsByWall(ctx context.Context, wallID pgtype.UUID) ([]Post, error)
	ListPostsByWallWithAuthorsDetails(ctx context.Context, wallID pgtype.UUID) ([]ListPostsByWallWithAuthorsDetailsRow, error)
	ListReceivedPendingFriendRequests(ctx context.Context, toUser pgtype.UUID) ([]ListReceivedPendingFriendRequestsRow, error)
	ListSentPendingFriendRequests(ctx context.Context, fromUser pgtype.UUID) ([]ListSentPendingFriendRequestsRow, error)
	ListUsers(ctx context.Context) ([]User, error)
	ListWalls(ctx context.Context) ([]Wall, error)
	ListWallsByUser(ctx context.Context, userID pgtype.UUID) ([]Wall, error)
	PinUnpinWall(ctx context.Context, id pgtype.UUID) (Wall, error)
	PrivatizeWall(ctx context.Context, id pgtype.UUID) (Wall, error)
	PublicizeWall(ctx context.Context, id pgtype.UUID) (Wall, error)
	RejectFriendship(ctx context.Context, id pgtype.UUID) error
	RemoveLikesCount(ctx context.Context, id pgtype.UUID) (Post, error)
	SearchUsersILike(ctx context.Context, searchTerm pgtype.Text) ([]SearchUsersILikeRow, error)
	SearchUsersTrigram(ctx context.Context, searchTerm string) ([]SearchUsersTrigramRow, error)
	UnarchiveWall(ctx context.Context, id pgtype.UUID) error
	UnhighlightPost(ctx context.Context, id pgtype.UUID) (Post, error)
	UpdateFriendship(ctx context.Context, arg UpdateFriendshipParams) (Friendship, error)
	UpdatePost(ctx context.Context, arg UpdatePostParams) (Post, error)
	UpdateProfile(ctx context.Context, arg UpdateProfileParams) (User, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	UpdateUserNew(ctx context.Context, arg UpdateUserNewParams) (User, error)
	UpdateWall(ctx context.Context, arg UpdateWallParams) (Wall, error)
}

var _ Querier = (*Queries)(nil)
